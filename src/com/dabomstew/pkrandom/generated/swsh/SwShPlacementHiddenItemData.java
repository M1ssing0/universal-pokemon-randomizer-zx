// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class SwShPlacementHiddenItemData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShPlacementHiddenItemData getRootAsSwShPlacementHiddenItemData(ByteBuffer _bb) { return getRootAsSwShPlacementHiddenItemData(_bb, new SwShPlacementHiddenItemData()); }
  public static SwShPlacementHiddenItemData getRootAsSwShPlacementHiddenItemData(ByteBuffer _bb, SwShPlacementHiddenItemData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShPlacementHiddenItemData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long itemHash() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateItemHash(long item_hash) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, item_hash); return true; } else { return false; } }
  public int chance() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateChance(int chance) { int o = __offset(6); if (o != 0) { bb.putInt(o + bb_pos, chance); return true; } else { return false; } }
  public int itemCount() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean mutateItemCount(int item_count) { int o = __offset(8); if (o != 0) { bb.putInt(o + bb_pos, item_count); return true; } else { return false; } }

  public static int createSwShPlacementHiddenItemData(FlatBufferBuilder builder,
      long item_hash,
      int chance,
      int item_count) {
    builder.startTable(3);
    SwShPlacementHiddenItemData.addItemHash(builder, item_hash);
    SwShPlacementHiddenItemData.addItemCount(builder, item_count);
    SwShPlacementHiddenItemData.addChance(builder, chance);
    return SwShPlacementHiddenItemData.endSwShPlacementHiddenItemData(builder);
  }

  public static void startSwShPlacementHiddenItemData(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addItemHash(FlatBufferBuilder builder, long itemHash) { builder.addLong(0, itemHash, 0L); }
  public static void addChance(FlatBufferBuilder builder, int chance) { builder.addInt(1, chance, 0); }
  public static void addItemCount(FlatBufferBuilder builder, int itemCount) { builder.addInt(2, itemCount, 0); }
  public static int endSwShPlacementHiddenItemData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShPlacementHiddenItemData get(int j) { return get(new SwShPlacementHiddenItemData(), j); }
    public SwShPlacementHiddenItemData get(SwShPlacementHiddenItemData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

