// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class SwShFlatDummyObject extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShFlatDummyObject getRootAsSwShFlatDummyObject(ByteBuffer _bb) { return getRootAsSwShFlatDummyObject(_bb, new SwShFlatDummyObject()); }
  public static SwShFlatDummyObject getRootAsSwShFlatDummyObject(ByteBuffer _bb, SwShFlatDummyObject obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShFlatDummyObject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int field00() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean mutateField00(int field_00) { int o = __offset(4); if (o != 0) { bb.put(o + bb_pos, (byte)field_00); return true; } else { return false; } }

  public static int createSwShFlatDummyObject(FlatBufferBuilder builder,
      int field_00) {
    builder.startTable(1);
    SwShFlatDummyObject.addField00(builder, field_00);
    return SwShFlatDummyObject.endSwShFlatDummyObject(builder);
  }

  public static void startSwShFlatDummyObject(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addField00(FlatBufferBuilder builder, int field00) { builder.addByte(0, (byte)field00, (byte)0); }
  public static int endSwShFlatDummyObject(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShFlatDummyObject get(int j) { return get(new SwShFlatDummyObject(), j); }
    public SwShFlatDummyObject get(SwShFlatDummyObject obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

