// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class SwShInventory extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShInventory getRootAsSwShInventory(ByteBuffer _bb) { return getRootAsSwShInventory(_bb, new SwShInventory()); }
  public static SwShInventory getRootAsSwShInventory(ByteBuffer _bb, SwShInventory obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShInventory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int items(int j) { int o = __offset(4); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int itemsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public IntVector itemsVector() { return itemsVector(new IntVector()); }
  public IntVector itemsVector(IntVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer itemsAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public ByteBuffer itemsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 4); }
  public boolean mutateItems(int j, int items) { int o = __offset(4); if (o != 0) { bb.putInt(__vector(o) + j * 4, items); return true; } else { return false; } }

  public static int createSwShInventory(FlatBufferBuilder builder,
      int itemsOffset) {
    builder.startTable(1);
    SwShInventory.addItems(builder, itemsOffset);
    return SwShInventory.endSwShInventory(builder);
  }

  public static void startSwShInventory(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addItems(FlatBufferBuilder builder, int itemsOffset) { builder.addOffset(0, itemsOffset, 0); }
  public static int createItemsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startItemsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSwShInventory(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShInventory get(int j) { return get(new SwShInventory(), j); }
    public SwShInventory get(SwShInventory obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

