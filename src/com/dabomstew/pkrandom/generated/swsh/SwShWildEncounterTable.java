// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SwShWildEncounterTable extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShWildEncounterTable getRootAsSwShWildEncounterTable(ByteBuffer _bb) { return getRootAsSwShWildEncounterTable(_bb, new SwShWildEncounterTable()); }
  public static SwShWildEncounterTable getRootAsSwShWildEncounterTable(ByteBuffer _bb, SwShWildEncounterTable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShWildEncounterTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long zoneId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable subTables(int j) { return subTables(new com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable(), j); }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable subTables(com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int subTablesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable.Vector subTablesVector() { return subTablesVector(new com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable.Vector()); }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable.Vector subTablesVector(com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterSubTable.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createSwShWildEncounterTable(FlatBufferBuilder builder,
      long zone_id,
      int sub_tablesOffset) {
    builder.startTable(2);
    SwShWildEncounterTable.addZoneId(builder, zone_id);
    SwShWildEncounterTable.addSubTables(builder, sub_tablesOffset);
    return SwShWildEncounterTable.endSwShWildEncounterTable(builder);
  }

  public static void startSwShWildEncounterTable(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addZoneId(FlatBufferBuilder builder, long zoneId) { builder.addLong(0, zoneId, 0L); }
  public static void addSubTables(FlatBufferBuilder builder, int subTablesOffset) { builder.addOffset(1, subTablesOffset, 0); }
  public static int createSubTablesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSubTablesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSwShWildEncounterTable(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShWildEncounterTable get(int j) { return get(new SwShWildEncounterTable(), j); }
    public SwShWildEncounterTable get(SwShWildEncounterTable obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

