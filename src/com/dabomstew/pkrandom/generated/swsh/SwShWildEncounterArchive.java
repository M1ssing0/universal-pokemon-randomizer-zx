// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SwShWildEncounterArchive extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShWildEncounterArchive getRootAsSwShWildEncounterArchive(ByteBuffer _bb) { return getRootAsSwShWildEncounterArchive(_bb, new SwShWildEncounterArchive()); }
  public static SwShWildEncounterArchive getRootAsSwShWildEncounterArchive(ByteBuffer _bb, SwShWildEncounterArchive obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShWildEncounterArchive __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long field00() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable encounterTables(int j) { return encounterTables(new com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable(), j); }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable encounterTables(com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int encounterTablesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable.Vector encounterTablesVector() { return encounterTablesVector(new com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable.Vector()); }
  public com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable.Vector encounterTablesVector(com.dabomstew.pkrandom.generated.swsh.SwShWildEncounterTable.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createSwShWildEncounterArchive(FlatBufferBuilder builder,
      long field_00,
      int encounter_tablesOffset) {
    builder.startTable(2);
    SwShWildEncounterArchive.addEncounterTables(builder, encounter_tablesOffset);
    SwShWildEncounterArchive.addField00(builder, field_00);
    return SwShWildEncounterArchive.endSwShWildEncounterArchive(builder);
  }

  public static void startSwShWildEncounterArchive(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addField00(FlatBufferBuilder builder, long field00) { builder.addInt(0, (int)field00, (int)0L); }
  public static void addEncounterTables(FlatBufferBuilder builder, int encounterTablesOffset) { builder.addOffset(1, encounterTablesOffset, 0); }
  public static int createEncounterTablesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startEncounterTablesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSwShWildEncounterArchive(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSwShWildEncounterArchiveBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedSwShWildEncounterArchiveBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShWildEncounterArchive get(int j) { return get(new SwShWildEncounterArchive(), j); }
    public SwShWildEncounterArchive get(SwShWildEncounterArchive obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

