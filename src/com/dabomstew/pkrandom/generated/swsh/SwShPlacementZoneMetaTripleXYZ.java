// automatically generated by the FlatBuffers compiler, do not modify

package com.dabomstew.pkrandom.generated.swsh;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class SwShPlacementZoneMetaTripleXYZ extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SwShPlacementZoneMetaTripleXYZ getRootAsSwShPlacementZoneMetaTripleXYZ(ByteBuffer _bb) { return getRootAsSwShPlacementZoneMetaTripleXYZ(_bb, new SwShPlacementZoneMetaTripleXYZ()); }
  public static SwShPlacementZoneMetaTripleXYZ getRootAsSwShPlacementZoneMetaTripleXYZ(ByteBuffer _bb, SwShPlacementZoneMetaTripleXYZ obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwShPlacementZoneMetaTripleXYZ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float locationX() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateLocationX(float location_x) { int o = __offset(4); if (o != 0) { bb.putFloat(o + bb_pos, location_x); return true; } else { return false; } }
  public float locationY() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateLocationY(float location_y) { int o = __offset(6); if (o != 0) { bb.putFloat(o + bb_pos, location_y); return true; } else { return false; } }
  public float locationZ() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateLocationZ(float location_z) { int o = __offset(8); if (o != 0) { bb.putFloat(o + bb_pos, location_z); return true; } else { return false; } }
  public float rotationX() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateRotationX(float rotation_x) { int o = __offset(10); if (o != 0) { bb.putFloat(o + bb_pos, rotation_x); return true; } else { return false; } }
  public float rotationY() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateRotationY(float rotation_y) { int o = __offset(12); if (o != 0) { bb.putFloat(o + bb_pos, rotation_y); return true; } else { return false; } }
  public float rotationZ() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateRotationZ(float rotation_z) { int o = __offset(14); if (o != 0) { bb.putFloat(o + bb_pos, rotation_z); return true; } else { return false; } }
  public float scaleX() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateScaleX(float scale_x) { int o = __offset(16); if (o != 0) { bb.putFloat(o + bb_pos, scale_x); return true; } else { return false; } }
  public float scaleY() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateScaleY(float scale_y) { int o = __offset(18); if (o != 0) { bb.putFloat(o + bb_pos, scale_y); return true; } else { return false; } }
  public float scaleZ() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateScaleZ(float scale_z) { int o = __offset(20); if (o != 0) { bb.putFloat(o + bb_pos, scale_z); return true; } else { return false; } }
  public long hashObjectName() { int o = __offset(22); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateHashObjectName(long hash_object_name) { int o = __offset(22); if (o != 0) { bb.putLong(o + bb_pos, hash_object_name); return true; } else { return false; } }
  public long hash10() { int o = __offset(24); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateHash10(long hash_10) { int o = __offset(24); if (o != 0) { bb.putLong(o + bb_pos, hash_10); return true; } else { return false; } }
  public long hash11() { int o = __offset(26); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateHash11(long hash_11) { int o = __offset(26); if (o != 0) { bb.putLong(o + bb_pos, hash_11); return true; } else { return false; } }

  public static int createSwShPlacementZoneMetaTripleXYZ(FlatBufferBuilder builder,
      float location_x,
      float location_y,
      float location_z,
      float rotation_x,
      float rotation_y,
      float rotation_z,
      float scale_x,
      float scale_y,
      float scale_z,
      long hash_object_name,
      long hash_10,
      long hash_11) {
    builder.startTable(12);
    SwShPlacementZoneMetaTripleXYZ.addHash11(builder, hash_11);
    SwShPlacementZoneMetaTripleXYZ.addHash10(builder, hash_10);
    SwShPlacementZoneMetaTripleXYZ.addHashObjectName(builder, hash_object_name);
    SwShPlacementZoneMetaTripleXYZ.addScaleZ(builder, scale_z);
    SwShPlacementZoneMetaTripleXYZ.addScaleY(builder, scale_y);
    SwShPlacementZoneMetaTripleXYZ.addScaleX(builder, scale_x);
    SwShPlacementZoneMetaTripleXYZ.addRotationZ(builder, rotation_z);
    SwShPlacementZoneMetaTripleXYZ.addRotationY(builder, rotation_y);
    SwShPlacementZoneMetaTripleXYZ.addRotationX(builder, rotation_x);
    SwShPlacementZoneMetaTripleXYZ.addLocationZ(builder, location_z);
    SwShPlacementZoneMetaTripleXYZ.addLocationY(builder, location_y);
    SwShPlacementZoneMetaTripleXYZ.addLocationX(builder, location_x);
    return SwShPlacementZoneMetaTripleXYZ.endSwShPlacementZoneMetaTripleXYZ(builder);
  }

  public static void startSwShPlacementZoneMetaTripleXYZ(FlatBufferBuilder builder) { builder.startTable(12); }
  public static void addLocationX(FlatBufferBuilder builder, float locationX) { builder.addFloat(0, locationX, 0.0f); }
  public static void addLocationY(FlatBufferBuilder builder, float locationY) { builder.addFloat(1, locationY, 0.0f); }
  public static void addLocationZ(FlatBufferBuilder builder, float locationZ) { builder.addFloat(2, locationZ, 0.0f); }
  public static void addRotationX(FlatBufferBuilder builder, float rotationX) { builder.addFloat(3, rotationX, 0.0f); }
  public static void addRotationY(FlatBufferBuilder builder, float rotationY) { builder.addFloat(4, rotationY, 0.0f); }
  public static void addRotationZ(FlatBufferBuilder builder, float rotationZ) { builder.addFloat(5, rotationZ, 0.0f); }
  public static void addScaleX(FlatBufferBuilder builder, float scaleX) { builder.addFloat(6, scaleX, 0.0f); }
  public static void addScaleY(FlatBufferBuilder builder, float scaleY) { builder.addFloat(7, scaleY, 0.0f); }
  public static void addScaleZ(FlatBufferBuilder builder, float scaleZ) { builder.addFloat(8, scaleZ, 0.0f); }
  public static void addHashObjectName(FlatBufferBuilder builder, long hashObjectName) { builder.addLong(9, hashObjectName, 0L); }
  public static void addHash10(FlatBufferBuilder builder, long hash10) { builder.addLong(10, hash10, 0L); }
  public static void addHash11(FlatBufferBuilder builder, long hash11) { builder.addLong(11, hash11, 0L); }
  public static int endSwShPlacementZoneMetaTripleXYZ(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwShPlacementZoneMetaTripleXYZ get(int j) { return get(new SwShPlacementZoneMetaTripleXYZ(), j); }
    public SwShPlacementZoneMetaTripleXYZ get(SwShPlacementZoneMetaTripleXYZ obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

